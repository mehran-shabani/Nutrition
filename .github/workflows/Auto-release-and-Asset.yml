name: Auto Release & Asset

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  bump-version-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read and bump version
        id: version
        run: |
          # خواندن نسخه فعلی از فایل version.txt، اگر نبود مقدار اولیه 1.0.0
          if [ -f version.txt ]; then
            VERSION=$(cat version.txt)
          else
            VERSION="1.0.0"
          fi

          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "$NEW_VERSION" > version.txt
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit new version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add version.txt
          git commit -m "Bump version to ${{ steps.version.outputs.new_version }}" || echo "No changes to commit"
          git push origin HEAD:main

      - name: Create tag
        run: |
          git fetch --tags
          TAG="v${{ steps.version.outputs.new_version }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag already exists."
          else
            git tag "$TAG"
            git push origin "$TAG"
          fi

      - name: Package repository as zip
        run: |
          ZIPNAME="repo-${{ steps.version.outputs.new_version }}.zip"
          zip -r $ZIPNAME . -x ".git/*" ".github/*"
          echo "zip_name=$ZIPNAME" >> $GITHUB_ENV

      - name: Create GitHub Release & upload asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.new_version }}
          name: Release v${{ steps.version.outputs.new_version }}
          files: ${{ env.zip_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
